{
  "query": [
    {
      "id_query": 1,
      "query": "HTML"
    },
    {
      "id_query": 2,
      "query": "Javascript"
    },
    {
      "id_query": 3,
      "query": "PHP"
    },
    {
      "id_query": 4,
      "query": "Python"
    }
  ],
  "title_course": [
    {
      "id_title_course": 1,
      "title": "HTML | Dasar-dasar HTML"
    },
    {
      "id_title_course": 2,
      "title": "HTML | Pengenalan HTML"
    },
    {
      "id_title_course": 3,
      "title": "HTML | Struktur HTML"
    },
    {
      "id_title_course": 4,
      "title": "HTML | Tag HTML Esensial"
    },
    {
      "id_title_course": 5,
      "title": "HTML | Atribut HTML"
    },
    {
      "id_title_course": 6,
      "title": "HTML | Desain Halaman Web"
    },
    {
      "id_title_course": 7,
      "title": "HTML | Tata Letak Halaman"
    },
    {
      "id_title_course": 8,
      "title": "HTML | Tautan dan Navigasi"
    },
    {
      "id_title_course": 9,
      "title": "HTML | Tabel dan Formulir"
    },
    {
      "id_title_course": 10,
      "title": "HTML | Gambar dan Multimedia"
    },
    {
      "id_title_course": 11,
      "title": "HTML | Penggayaan HTML"
    },
    {
      "id_title_course": 12,
      "title": "HTML | CSS untuk Pemula"
    },
    {
      "id_title_course": 13,
      "title": "HTML | Selektor CSS"
    },
    {
      "id_title_course": 14,
      "title": "HTML | Properti CSS"
    },
    {
      "id_title_course": 15,
      "title": "HTML | Model Kotak CSS"
    },
    {
      "id_title_course": 16,
      "title": "HTML | Pemrograman HTML"
    },
    {
      "id_title_course": 17,
      "title": "HTML | JavaScript Dasar"
    },
    {
      "id_title_course": 18,
      "title": "HTML | Acara dan Penanganan Acara"
    },
    {
      "id_title_course": 19,
      "title": "HTML | Objek DOM"
    },
    {
      "id_title_course": 20,
      "title": "HTML | AJAX"
    },
    {
      "id_title_course": 21,
      "title": "HTML | HTML Lanjutan"
    },
    {
      "id_title_course": 22,
      "title": "HTML | HTML5 Fitur Baru"
    },
    {
      "id_title_course": 23,
      "title": "HTML | Web Semantik"
    },
    {
      "id_title_course": 24,
      "title": "HTML | Kegunaan dan Aksesibilitas"
    },
    {
      "id_title_course": 25,
      "title": "HTML | Validasi HTML"
    },
    {
      "id_title_course": 26,
      "title": "Javascript | Pembelajaran Javascript"
    },
    {
      "id_title_course": 27,
      "title": "Javascript | Pengenalan Javascript"
    },
    {
      "id_title_course": 28,
      "title": "Javascript | Tipe Data dan Struktur Data"
    },
    {
      "id_title_course": 29,
      "title": "Javascript | Operator dan Ekspresi"
    },
    {
      "id_title_course": 30,
      "title": "Javascript | Pengendalian Alur"
    },
    {
      "id_title_course": 31,
      "title": "Javascript | Fungsi"
    },
    {
      "id_title_course": 32,
      "title": "Javascript | Array dan Objek"
    },
    {
      "id_title_course": 33,
      "title": "Javascript | DOM dan Event"
    },
    {
      "id_title_course": 34,
      "title": "Javascript | Asinkronitas dan Janji"
    },
    {
      "id_title_course": 35,
      "title": "Javascript | ES6 dan Fitur Baru"
    },
    {
      "id_title_course": 36,
      "title": "Javascript | Pengujian Unit"
    },
    {
      "id_title_course": 37,
      "title": "Javascript | Pola Desain"
    },
    {
      "id_title_course": 38,
      "title": "Javascript | Pengembangan Web Lanjutan"
    },
    {
      "id_title_course": 39,
      "title": "Javascript | Proyek Javascript"
    },
    {
      "id_title_course": 40,
      "title": "PHP | Pendahuluan"
    },
    {
      "id_title_course": 41,
      "title": "PHP | Pengenalan PHP"
    },
    {
      "id_title_course": 42,
      "title": "PHP | Menginstal dan Mengatur PHP"
    },
    {
      "id_title_course": 43,
      "title": "PHP | Dasar-Dasar PHP"
    },
    {
      "id_title_course": 44,
      "title": "PHP | Sintaksis Dasar"
    },
    {
      "id_title_course": 45,
      "title": "PHP | Tipe Data dan Variable"
    },
    {
      "id_title_course": 46,
      "title": "PHP | Operator dan Kontrol Alur"
    },
    {
      "id_title_course": 47,
      "title": "PHP | Fungsi dan Array"
    },
    {
      "id_title_course": 48,
      "title": "PHP | Interaksi Database"
    },
    {
      "id_title_course": 49,
      "title": "PHP | MySQLi"
    },
    {
      "id_title_course": 50,
      "title": "PHP | PDO"
    },
    {
      "id_title_course": 51,
      "title": "PHP | Pengembangan Web"
    },
    {
      "id_title_course": 52,
      "title": "PHP | HTML dan PHP"
    },
    {
      "id_title_course": 53,
      "title": "PHP | CSS dan PHP"
    },
    {
      "id_title_course": 54,
      "title": "PHP | JavaScript dan PHP"
    },
    {
      "id_title_course": 55,
      "title": "PHP | Kerangka Kerja PHP"
    },
    {
      "id_title_course": 56,
      "title": "PHP | Kemajuan"
    },
    {
      "id_title_course": 57,
      "title": "PHP | ООП dalam PHP"
    },
    {
      "id_title_course": 58,
      "title": "PHP | MVC"
    },
    {
      "id_title_course": 59,
      "title": "PHP | Keamanan PHP"
    },
    {
      "id_title_course": 60,
      "title": "PHP | Optimasi Kinerja"
    },
    {
      "id_title_course": 61,
      "title": "PHP | Proyek"
    },
    {
      "id_title_course": 62,
      "title": "PHP | Membangun Sistem Blog"
    },
    {
      "id_title_course": 63,
      "title": "PHP | Mengembangkan Toko Online"
    },
    {
      "id_title_course": 64,
      "title": "PHP | Membuat Aplikasi CRUD"
    },
    {
      "id_title_course": 65,
      "title": "PHP | Tools dan Pustaka"
    },
    {
      "id_title_course": 66,
      "title": "PHP | Composer"
    },
    {
      "id_title_course": 67,
      "title": "PHP | Laravel"
    },
    {
      "id_title_course": 68,
      "title": "PHP | CodeIgniter"
    },
    {
      "id_title_course": 69,
      "title": "Python | Pembelajaran Python:"
    },
    {
      "id_title_course": 70,
      "title": "Python | - Pengantar Python"
    },
    {
      "id_title_course": 71,
      "title": "Python | - Tipe Data dan Struktur Data"
    },
    {
      "id_title_course": 72,
      "title": "Python | - Operator dan Ekspresi"
    },
    {
      "id_title_course": 73,
      "title": "Python | - Kontrol Alur"
    },
    {
      "id_title_course": 74,
      "title": "Python | - Fungsi"
    },
    {
      "id_title_course": 75,
      "title": "Python | - Kelas dan Objek"
    },
    {
      "id_title_course": 76,
      "title": "Python | - Pemrosesan File"
    },
    {
      "id_title_course": 77,
      "title": "Python | - Pengecualian"
    },
    {
      "id_title_course": 78,
      "title": "Python | - Pemrograman Berorientasi Objek"
    },
    {
      "id_title_course": 79,
      "title": "Python | - Pustaka Standar Python"
    },
    {
      "id_title_course": 80,
      "title": "Python | - Pengembangan Web dengan Python"
    },
    {
      "id_title_course": 81,
      "title": "Python | - Ilmu Data dengan Python"
    },
    {
      "id_title_course": 82,
      "title": "Python | - Pembelajaran Mesin dengan Python"
    },
    {
      "id_title_course": 83,
      "title": "Python | - Proyek Python"
    }
  ],
  "course": [
    {
      "id_course": 1,
      "id_title_course": 44,
      "course": "## PHP | Sintaksis Dasar\n\nPHP (Hypertext Preprocessor) adalah bahasa pemrograman yang khusus digunakan untuk pengembangan web. Sintaksis dasar PHP hampir mirip dengan bahasa pemrograman C dan Java.\n\n### Struktur Dasar\n```php\n<?php\n// Kode PHP di sini\n?>\n```\n\n### Tipe Data\nPHP memiliki beberapa tipe data dasar, seperti:\n\n- Bilangan bulat (integer)\n- Bilangan desimal (float)\n- String\n- Boolean (true/false)\n- Array\n\n### Variabel\nVariabel digunakan untuk menyimpan nilai dalam PHP. Untuk membuat variabel, gunakan tanda dollar ($).\n\n```php\n$nama = \"John Doe\";\n$usia = 25;\n```\n\n### Konstanta\nKonstanta digunakan untuk menyimpan nilai yang tidak boleh diubah. Untuk membuat konstanta, gunakan fungsi `define()`.\n\n```php\ndefine(\"NAMA\", \"John Doe\");\n```\n\n### Operator\nPHP mendukung berbagai operator, seperti:\n\n- Operator aritmatika (misalnya +, -, *, /)\n- Operator perbandingan (misalnya ==, !=, <, >)\n- Operator logis (misalnya &&, ||, !)\n\n### Struktur Kontrol\nStruktur kontrol digunakan untuk mengontrol aliran eksekusi program. Beberapa struktur kontrol umum meliputi:\n\n- Kondisi if-else\n- Perulangan for\n- Perulangan while\n- Perulangan foreach\n\nDengan memahami sintaksis dasar PHP, Anda dapat mulai menulis program PHP sederhana untuk pengembangan web."
    },
    {
      "id_course": 2,
      "id_title_course": 49,
      "course": "## PHP | MySQLi\n\nMySQLi adalah salah satu ekstensi PHP yang digunakan untuk terhubung dan berinteraksi dengan database MySQL. Ekstensi ini menawarkan antarmuka prosedural dan berorientasi objek untuk melakukan berbagai operasi basis data.\n\n**Keuntungan MySQLi**\n\n* **Performa yang Dioptimalkan:** MySQLi lebih cepat dan efisien daripada ekstensi mysqli sebelumnya, sehingga cocok untuk aplikasi dengan lalu lintas tinggi.\n* **Dukungan Transaksi:** MySQLi mendukung transaksi eksplisit, memungkinkan Anda melakukan serangkaian operasi basis data dan membatalkannya jika terjadi kesalahan.\n* **Antarmuka Berorientasi Objek:** Antarmuka berorientasi objek MySQLi menyediakan akses yang mudah dan konsisten ke objek database, membuat pengembangan menjadi lebih sederhana.\n* **Syntax yang Mudah:** Sintaksis MySQLi mirip dengan fungsi MySQL sebelumnya, sehingga memudahkan transisi bagi pengembang yang sudah ada.\n\n**Cara Menggunakan MySQLi**\n\nUntuk menggunakan MySQLi, Anda perlu menambahkan ekstensi ke proyek Anda dan membuat objek koneksi. Berikut ini contoh penggunaan antarmuka prosedural:\n\n```php\n$mysqli = mysqli_connect(\"host\", \"username\", \"password\", \"database\");\nif ($mysqli->connect_errno) {\n    echo \"Koneksi gagal: \" . $mysqli->connect_error;\n}\n```\n\n**Membuat Query**\n\nSetelah membuat koneksi, Anda dapat menjalankan query SQL menggunakan `mysqli_query()`. Misalnya, untuk mengambil data dari tabel 'users':\n\n```php\n$result = $mysqli->query(\"SELECT * FROM users\");\n```\n\n**Memproses Hasil**\n\nHasil kueri dikembalikan sebagai objek `mysqli_result`, dan Anda dapat memroses barisnya menggunakan `mysqli_fetch_row()` atau `mysqli_fetch_assoc()`.\n\n**Menutup Koneksi**\n\nSetelah selesai berinteraksi dengan database, penting untuk menutup koneksi menggunakan `mysqli_close()`. Ini akan melepaskan sumber daya dan mencegah kebocoran memori.\n\nMySQLi adalah ekstensi PHP yang andal dan efisien untuk menangani operasi basis data MySQL. Dengan antarmuka yang mudah digunakan, performa yang dioptimalkan, dan dukungan untuk transaksi, MySQLi merupakan pilihan yang tepat untuk berbagai aplikasi berbasis data."
    },
    {
      "id_course": 3,
      "id_title_course": 50,
      "course": "## PHP | PDO\n\n### Pengantar\n\nPDO (PHP Data Objects) adalah ekstensi PHP yang menyediakan antarmuka terpadu untuk berinteraksi dengan database. Ini menyederhanakan proses koneksi database, eksekusi kueri, dan pengambilan data.\n\n### Koneksi Database\n\n```php\n$dsn = 'mysql:host=localhost;dbname=database_name';\n$user = 'username';\n$password = 'password';\n\ntry {\n    $pdo = new PDO($dsn, $user, $password);\n} catch (PDOException $e) {\n    echo \"Koneksi gagal: \" . $e->getMessage();\n}\n```\n\n### Eksekusi Kueri\n\n```php\n$stmt = $pdo->prepare(\"SELECT * FROM users WHERE id = ?\");\n$stmt->execute([1]);\n\n$result = $stmt->fetchAll();\n```\n\n### Pengambilan Data\n\n```php\nforeach ($result as $row) {\n    echo \"ID: \" . $row['id'] . \", Nama: \" . $row['nama'];\n}\n```\n\n### Keuntungan PDO\n\n* Antarmuka terpadu untuk berbagai basis data (MySQL, PostgreSQL, Oracle, dll.)\n* Peningkatan keamanan melalui parameter yang disiapkan\n* Dukungan untuk transaksi\n* Pengurangan kebutuhan untuk menangani kesalahan basis data secara manual\n\n### Kesimpulan\n\nPDO adalah alat yang kuat untuk bekerja dengan database di PHP. Ini menyediakan antarmuka yang terpadu dan efisien, meningkatkan keamanan dan skalabilitas aplikasi."
    },
    {
      "id_course": 4,
      "id_title_course": 66,
      "course": "## Composer: Manajer Ketergantungan untuk PHP\n\nComposer adalah manajer ketergantungan untuk PHP yang memungkinkan Anda mengelola dan menginstal pustaka pihak ketiga untuk proyek Anda dengan mudah.\n\n### Cara Memasang Composer\n\nUntuk memasang Composer, jalankan perintah berikut di terminal:\n\n```bash\ncurl -sS https://getcomposer.org/installer | php\n```\n\nIni akan mengunduh dan menginstal Composer secara global.\n\n### Membuat Proyek Composer\n\nUntuk membuat proyek Composer baru, buat file `composer.json` di direktori proyek Anda dengan konten berikut:\n\n```json\n{\n    \"name\": \"my-project\",\n    \"require\": {\n        \"vendor/paket\": \"^1.0.0\"\n    }\n}\n```\n\nDi sini, `vendor/paket` adalah nama pustaka yang ingin Anda instal, dan `^1.0.0` adalah versi pustaka yang diperlukan.\n\n### Menginstal Ketergantungan\n\nUntuk menginstal ketergantungan yang ditentukan dalam file `composer.json`, jalankan perintah berikut:\n\n```bash\ncomposer install\n```\n\nIni akan mengunduh dan menginstal pustaka dan semua ketergantungannya.\n\n### Memperbarui Ketergantungan\n\nUntuk memperbarui ketergantungan Anda ke versi terbaru yang tersedia, jalankan perintah berikut:\n\n```bash\ncomposer update\n```\n\nIni akan memeriksa pembaruan untuk semua pustaka yang diinstal dan menginstal versi terbaru.\n\n### Menghapus Ketergantungan\n\nUntuk menghapus ketergantungan, edit file `composer.json` dan hapus entri untuk ketergantungan tersebut. Kemudian, jalankan perintah berikut:\n\n```bash\ncomposer remove vendor/paket\n```\n\nIni akan menghapus pustaka dan semua ketergantungannya dari proyek Anda.\n\n### Manfaat Menggunakan Composer\n\nBerikut adalah beberapa manfaat menggunakan Composer:\n\n* Pengelolaan ketergantungan yang mudah\n* Pembaruan otomatis\n* Memastikan kompatibilitas pustaka\n* Dukungan komunitas yang luas\n\n### Kesimpulan\n\nComposer adalah alat yang sangat berharga bagi pengembang PHP karena menyediakan cara yang mudah dan efisien untuk mengelola ketergantungan. Dengan mengikuti panduan ini, Anda dapat mulai menggunakan Composer untuk mengoptimalkan proyek pengembangan PHP Anda."
    },
    {
      "id_course": 5,
      "id_title_course": 33,
      "course": "## Tentang: JavaScript | DOM dan Event\n\n**DOM (Document Object Model)**\n\nDOM (Document Object Model) adalah representasi hierarkis dari sebuah dokumen HTML atau XML. Ini adalah antarmuka yang digunakan JavaScript untuk mengakses dan memodifikasi struktur dan konten dokumen.\n\nDengan DOM, Anda dapat melakukan berbagai hal, seperti:\n\n- Mengakses elemen HTML\n- Membuat dan menghapus elemen\n- Mengubah gaya dan atribut elemen\n- Menambahkan event listener\n\n**Event**\n\nEvent adalah kejadian yang terjadi pada halaman web, seperti klik mouse, gerakan mouse, atau pemuatan halaman. JavaScript memungkinkan Anda untuk merespons event ini dan melakukan tindakan yang sesuai.\n\nUntuk menambahkan event listener, Anda dapat menggunakan metode `addEventListener()` pada elemen DOM. Misalnya:\n\n```javascript\ndocument.getElementById(\"myButton\").addEventListener(\"click\", function() {\n  alert(\"Tombol diklik!\");\n});\n```\n\n**Contoh Penggunaan**\n\nBerikut adalah contoh bagaimana Anda dapat menggunakan DOM dan event untuk membuat halaman web interaktif:\n\n```javascript\n// Dapatkan elemen tombol\nconst button = document.getElementById(\"myButton\");\n\n// Tambahkan event listener ke tombol\nbutton.addEventListener(\"click\", function() {\n\n  // Ubah warna latar belakang elemen paragraf\n  const paragraph = document.getElementById(\"myParagraph\");\n  paragraph.style.backgroundColor = \"red\";\n\n  // Tambahkan teks baru ke elemen paragraf\n  paragraph.innerHTML = \"Tombol diklik!\";\n});\n```\n\n**Kesimpulan**\n\nDOM dan event adalah konsep penting dalam JavaScript yang memungkinkan Anda untuk berinteraksi dengan dan memodifikasi halaman web. Dengan memahaminya, Anda dapat membangun halaman web yang dinamis dan interaktif."
    },
    {
      "id_course": 6,
      "id_title_course": 30,
      "course": "## Javascript: Pengendalian Alur\n\nPengendalian alur adalah teknik yang digunakan dalam pemrograman untuk mengontrol urutan eksekusi kode. Dalam JavaScript, terdapat beberapa struktur pengendalian alur, antara lain:\n\n### if...else Statements\n\nStruktur `if...else` memungkinkan Anda mengeksekusi blok kode hanya jika kondisi tertentu terpenuhi:\n\n```js\nif (kondisi) {\n  // Kode yang dieksekusi jika kondisi benar\n} else {\n  // Kode yang dieksekusi jika kondisi salah\n}\n```\n\n### switch...case Statements\n\nStruktur `switch...case` memungkinkan Anda mengeksekusi blok kode yang berbeda berdasarkan nilai sebuah variabel:\n\n```js\nswitch (variabel) {\n  case nilai1:\n    // Kode yang dieksekusi jika variabel sama dengan nilai1\n    break;\n  case nilai2:\n    // Kode yang dieksekusi jika variabel sama dengan nilai2\n    break;\n  default:\n    // Kode yang dieksekusi jika variabel tidak cocok dengan nilai apa pun\n    break;\n}\n```\n\n### for Loops\n\n`for` loop digunakan untuk mengulangi blok kode beberapa kali, sampai kondisi tertentu terpenuhi:\n\n```js\nfor (inisialisasi; kondisi; increment) {\n  // Kode yang dieksekusi setiap iterasi\n}\n```\n\n### while Loops\n\n`while` loop mengulangi blok kode selama kondisi tertentu terpenuhi:\n\n```js\nwhile (kondisi) {\n  // Kode yang dieksekusi setiap iterasi\n}\n```\n\n### do...while Loops\n\n`do...while` loop mengulangi blok kode setidaknya satu kali, kemudian mengulangi lagi jika kondisi tertentu terpenuhi:\n\n```js\ndo {\n  // Kode yang dieksekusi setiap iterasi\n} while (kondisi);\n```\n\n### Break dan Continue Statements\n\n* `break` statement mengakhiri loop atau switch case saat ini.\n* `continue` statement melewati sisa iterasi loop saat ini dan melanjutkan ke iterasi berikutnya.\n\nDengan memahami struktur pengendalian alur ini, Anda dapat mengontrol urutan eksekusi kode Anda secara efektif dan membuat program JavaScript yang lebih fleksibel dan dinamis."
    },
    {
      "id_course": 7,
      "id_title_course": 71,
      "course": "# Python: Tipe Data dan Struktur Data\n\n## Pendahuluan\n\nDalam pemrograman Python, tipe data mendefinisikan jenis nilai yang dapat disimpan dalam variabel. Struktur data, di sisi lain, adalah cara untuk mengatur dan mengelola data dalam memori. Memahami kedua konsep ini sangat penting untuk menulis kode Python yang efektif.\n\n## Tipe Data Python\n\nTipe data dasar dalam Python meliputi:\n\n- **Numerik**: integer (int), bilangan floating-point (float), dan kompleks (complex)\n- **String**: urutan karakter\n- **Boolean**: nilai logika (True atau False)\n- **None**: nilai khusus yang mewakili ketidakhadiran\n\n## Struktur Data Python\n\nStruktur data umum dalam Python meliputi:\n\n- **List**: koleksi item yang dipesan dan dapat dimodifikasi\n- **Tuple**: koleksi item yang dipesan dan tidak dapat dimodifikasi\n- **Set**: koleksi item unik dan tidak berurutan\n- **Dictionary**: koleksi pasangan kunci-nilai yang tidak terurut\n\n### Mengakses Elemen Struktur Data\n\nAnda dapat mengakses elemen dalam struktur data menggunakan pengindeksan atau metode.\n\n**Pengindeksan:**\n```python\nmy_list[0]  # Mengakses elemen pertama dari daftar\nmy_tuple[1]  # Mengakses elemen kedua dari tuple\n```\n\n**Metode:**\n```python\nmy_list.append(item)  # Menambahkan item ke daftar\nmy_set.remove(item)  # Menghapus item dari set\n```\n\n## Contoh\n\nBerikut adalah contoh penggunaan tipe data dan struktur data dalam Python:\n\n```python\n# Membuat tipe data\nname = \"John Doe\"  # String\nage = 25  # Integer\nis_student = True  # Boolean\nsubjects = [\"Matematika\", \"Fisika\", \"Kimia\"]  # Daftar\n```\n\n```python\n# Menggunakan struktur data\n# Mengakses elemen dari daftar menggunakan pengindeksan\nfirst_subject = subjects[0]\n\n# Menambahkan item ke daftar menggunakan metode\nsubjects.append(\"Biologi\")\n\n# Menghapus item dari set menggunakan metode\nsubjects.remove(\"Fisika\")\n```\n\n## Kesimpulan\n\nMemahami tipe data dan struktur data sangat penting dalam pemrograman Python. Tipe data menentukan jenis nilai yang dapat disimpan dalam variabel, sementara struktur data menyediakan cara untuk mengatur dan mengelola data dalam memori. Menguasai konsep-konsep ini memungkinkan Anda menulis kode yang efisien, terorganisir, dan dapat dipelihara."
    }
  ]
}